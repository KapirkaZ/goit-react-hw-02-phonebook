{"version":3,"sources":["components/Filter/Filter.module.css","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","components/ContactForm/ContactForm.jsx","App.js","index.js","components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.module.css"],"names":["module","exports","ContactList","contacts","onRemoveContact","className","styles","TaskList","map","contact","TaskList_item","name","number","buttonstyle","TaskList_button","type","onClick","id","Filter","value","onChangeFilter","filterstyle","inputstyle","onChange","e","target","ContactForm","state","handleChange","setState","handleSubmit","preventDefault","props","onAddContact","TaskEditor","onSubmit","this","TaskEditor_label","TaskEditor_input","pattern","TaskEditor_button","Component","App","filter","addContact","task","cont","includes","alert","length","uuidv4","prevState","changeFilter","getVisibleContacts","toLowerCase","removeContact","contactId","visibleContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0e4216e4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterstyle\":\"Filter_filterstyle__3vxBM\",\"inputstyle\":\"Filter_inputstyle__2VJGn\"};","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./ContactList.module.css\";\r\n\r\nconst ContactList = ({ contacts, onRemoveContact }) => (\r\n  <ul className={styles.TaskList}>\r\n    {contacts.map((contact) => (\r\n      <li className={styles.TaskList_item} key={contact.id}>\r\n        {contact.name + \": \" + contact.number}\r\n        {\r\n          <span className={styles.buttonstyle}>\r\n            <button\r\n              className={styles.TaskList_button}\r\n              type=\"button\"\r\n              name=\"delte\"\r\n              onClick={() => onRemoveContact(contact.id)}\r\n            >\r\n              Delete\r\n            </button>\r\n          </span>\r\n        }\r\n      </li>\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nContactList.propTypes = {\r\n  onRemoveContact: PropTypes.func.isRequired,\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.number.isRequired,\r\n    })\r\n  ),\r\n};\r\nexport default ContactList;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./Filter.module.css\";\r\n\r\nexport default function Filter({ value, onChangeFilter }) {\r\n  return (\r\n    <div className={styles.filterstyle}>\r\n      Find contacts by name\r\n      <input\r\n        className={styles.inputstyle}\r\n        type=\"text\"\r\n        value={value}\r\n        onChange={(e) => onChangeFilter(e.target.value)}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onchangeFilter: PropTypes.func.isRequired,\r\n};\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./ContactForm.module.css\";\r\n\r\nexport default class ContactForm extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    this.props.onAddContact({ ...this.state });\r\n\r\n    this.setState({ name: \"\", number: \"\" });\r\n  };\r\n  render() {\r\n    return (\r\n      <form className={styles.TaskEditor} onSubmit={this.handleSubmit}>\r\n        <label className={styles.TaskEditor_label}>\r\n          Name:\r\n          <input\r\n            className={styles.TaskEditor_input}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            value={this.state.name}\r\n            onChange={this.handleChange}\r\n          />\r\n        </label>\r\n        <label className={styles.TaskEditor_label}>\r\n          Number:\r\n          <input\r\n            className={styles.TaskEditor_input}\r\n            type=\"text\"\r\n            name=\"number\"\r\n            value={this.state.number}\r\n            onChange={this.handleChange}\r\n          />\r\n        </label>\r\n        <button className={styles.TaskEditor_button} type=\"submit\">\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nContactForm.propTypes = {\r\n  onAddContact: PropTypes.func.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string.isRequired,\r\n};\r\n","import React, { Component } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport ContactList from \"./components/ContactList/ContactList\";\nimport Filter from \"./components/Filter/Filter\";\nimport ContactForm from \"./components/ContactForm/ContactForm\";\n\nexport default class App extends Component {\n  state = {\n    contacts: [\n      { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n      { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n      { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n      { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n    ],\n    filter: \"\",\n  };\n\n  addContact = (task) => {\n    const searchSameName = this.state.contacts\n      .map((cont) => cont.name)\n      .includes(task.name);\n\n    if (searchSameName) {\n      alert(`${task.name} is already in contacts`);\n    } else if (task.name.length === 0) {\n      alert(\"Fields must be filled!\");\n    } else {\n      const contact = {\n        ...task,\n        id: uuidv4(),\n      };\n\n      this.setState((prevState) => ({\n        contacts: [...prevState.contacts, contact],\n      }));\n    }\n  };\n\n  changeFilter = (filter) => {\n    this.setState({ filter });\n  };\n\n  getVisibleContacts = () => {\n    const { contacts, filter } = this.state;\n\n    return contacts.filter((contacts) =>\n      contacts.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  };\n\n  removeContact = (contactId) => {\n    this.setState((prevState) => {\n      return {\n        contacts: prevState.contacts.filter(({ id }) => id !== contactId),\n      };\n    });\n  };\n\n  render() {\n    const { filter } = this.state;\n\n    const visibleContacts = this.getVisibleContacts();\n\n    return (\n      <div>\n        <h1>Phonebook</h1>\n\n        <ContactForm onAddContact={this.addContact} />\n        <h2>Contacts</h2>\n        {visibleContacts.length > 1 && (\n          <Filter value={filter} onChangeFilter={this.changeFilter} />\n        )}\n        {visibleContacts.length > 0 && (\n          <ContactList\n            contacts={visibleContacts}\n            onRemoveContact={this.removeContact}\n          />\n        )}\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TaskEditor\":\"ContactForm_TaskEditor__1RfMO\",\"TaskEditor_label\":\"ContactForm_TaskEditor_label__1uMzC\",\"TaskEditor_input\":\"ContactForm_TaskEditor_input__zM0Mp\",\"TaskEditorinput\":\"ContactForm_TaskEditorinput__2yh3N\",\"TaskEditor_button\":\"ContactForm_TaskEditor_button__sujSS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TaskList\":\"ContactList_TaskList__32fXK\",\"TaskList_item\":\"ContactList_TaskList_item__2doY5\",\"completed\":\"ContactList_completed__1ZKKI\",\"TaskList_text\":\"ContactList_TaskList_text__3lgPB\",\"TaskList_actions\":\"ContactList_TaskList_actions__3wN1a\",\"TaskList_button\":\"ContactList_TaskList_button__1nIJ8\",\"buttonstyle\":\"ContactList_buttonstyle__235P0\"};"],"sourceRoot":""}